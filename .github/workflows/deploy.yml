name: Build and Deploy Hugo Site

on:
  push:
    branches:
      - main # 如果您的主分支是 master, 请改回 master
  
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 第 1 步：检出源码
      # 我们不再使用子模块，所以 submodules: false 是正确的，可以避免潜在错误。
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: false

      # 第 2 步：安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 第 3 步：构建网站
      # 【核心修改】使用 --source 参数告诉 Hugo 在 hugo 子目录中寻找源文件。
      # 这会从根目录运行，但处理 hugo/ 文件夹，并将结果输出到 hugo/public/。
      - name: Build website
        run: hugo --source hugo --minify

      # 第 4 步：检查并列出构建结果
      # 【核心修改】检查的路径是 hugo/public，因为上一步的构建结果在这里。
      - name: Check build output
        run: |
          echo "--- Checking contents of ./hugo/public directory ---"
          if [ -d "hugo/public" ] && [ "$(ls -A hugo/public)" ]; then
            ls -R hugo/public
          else
            echo "!!! CRITICAL: Build failed. The './hugo/public' directory is empty or does not exist."
            exit 1
          fi
          echo "-------------------------------------------------"

      # 第 5 步：部署到 GitHub Pages
      # 【核心修改】发布的目录 publish_dir 必须指向 hugo/public。
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./hugo/public
          publish_branch: gh-pages